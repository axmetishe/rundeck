#!/bin/sh

set -e

setperm() {
  local user="$1"
  shift
  local group="$1"
  shift
  local mode="$1"
  shift
  local file="$@"

  # Only do something when no setting exists - if it was set, then it's already
  # been unpacked using the appropriate ownership and permissions.
  if ! dpkg-statoverride --list "$file" >/dev/null 2>&1; then
    chown "$user":"$group" "$file"
    chmod "$mode" "$file"
  fi
}

case "$1" in
  configure)
    # If the package has default file it could be sourced, so that
    # the local admin can overwrite the defaults

    [ -f "/etc/default/rundeck" ] && . /etc/default/rundeck
   
    # Sane defaults:
   
    [ -z "$SERVER_HOME" ] && SERVER_HOME=[[packagingAppPrefix]]
    [ -z "$SERVER_USER" ] && SERVER_USER=[[packagingAppUser]]
    [ -z "$SERVER_NAME" ] && SERVER_NAME="Rundeck user account"
    [ -z "$SERVER_GROUP" ] && SERVER_GROUP=[[packagingAppGroup]]

    # create user to avoid running server as root
    # 1. create group if not existing
    if ! getent group | grep -q "^$SERVER_GROUP:" ; then
       echo -n "Adding group $SERVER_GROUP.."
       addgroup --quiet --system $SERVER_GROUP 2>/dev/null ||true
       echo "..done"
    fi
    # 2. create homedir if not existing
    test -d $SERVER_HOME || mkdir $SERVER_HOME
    # 3. create user if not existing
    if ! getent passwd | grep -q "^$SERVER_USER:"; then
      echo -n "Adding system user $SERVER_USER.."
      adduser --quiet \
              --system \
              --ingroup $SERVER_GROUP \
              --no-create-home \
              --disabled-password \
              $SERVER_USER 2>/dev/null || true
      echo "..done"
    fi

    # 4. adjust passwd entry
    usermod -c "$SERVER_NAME" \
            -d $SERVER_HOME   \
            -g $SERVER_GROUP  \
               $SERVER_USER
    ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    :
    ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

exit 0

